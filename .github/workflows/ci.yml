name: CI Pipeline

on:

  workflow_dispatch:
    inputs:

      suite:
        description: 'Choose test suite to run'
        required: false
        default: 'regression'
        type: choice
        options: [ ui, regression ]

      browser:
        description: 'Choose browser to run tests on'
        required: false
        default: 'chromium'
        type: choice
        options: [ chromium, firefox, webkit ]

permissions:
  contents: write

jobs:

  ui-tests:
    name: UI Test ${{ matrix.group }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        group:
          - ui
          - regression

    env:
      SUITE: ${{ github.event.inputs.suite || matrix.group }}
      BROWSER: ${{ github.event.inputs.browser || 'chromium' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Playwright Browsers
        run: python -m playwright install --with-deps

      - name: Clean old Allure results
        run: rm -rf features/reports/allure-results/*

      - name: Debug Collection Errors Details
        run: |
          echo "=== Starting Collection Debug ==="
          echo "Suite: $SUITE" 
          echo "browser: $BROWSER"
          echo "=== Collection Output ==="
          python -m pytest --collect-only -m "$SUITE" --alluredir=features/reports/allure-results/$SUITE
          echo "=== Collection finished with exit code: $? ==="

      - name: Run Pytest for UI "${{ env.SUITE }}"
        run: |
          mkdir -p features/reports/allure-results/$SUITE
          pytest -m "$SUITE" --alluredir=features/reports/allure-results/$SUITE

      - name: Upload Allure Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.group }}
          path: features/reports/allure-results/${{ github.event.inputs.suite || matrix.group }}/*
          retention-days: 7

      - name: Upload Network Call Files
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: network-call-files-${{ github.event.inputs.suite || matrix.group }}
          path: features/logs/network_calls*.html
          retention-days: 7
        continue-on-error: true

  allure-report:
    runs-on: ubuntu-latest
    needs: [ ui-tests ]
    if: always()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Allure Results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          merge-multiple: true
          path: features/reports/allure-results
        continue-on-error: true

      - name: Get Allure History (for publishing to gh-pages)
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
          persist-credentials: true
        continue-on-error: true

      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        with:
          allure_results: features/reports/allure-results
          allure_history: gh-pages/last-history
          keep_reports: 7

      - name: Truncate history.json if too large
        run: |
          HISTORY_FILE="gh-pages/last-history/history.json"
          MAX_SIZE=$((95 * 1024 * 1024))
          if [ -f "$HISTORY_FILE" ]; then
            FILE_SIZE=$(stat -c%s "$HISTORY_FILE")
            if [ "$FILE_SIZE" -gt "$MAX_SIZE" ]; then
              echo "{}" > "$HISTORY_FILE"
              echo "history.json was too large and has been truncated."
            fi
          fi

      - name: Deploy Allure report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages/last-history
          force_orphan: false
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
